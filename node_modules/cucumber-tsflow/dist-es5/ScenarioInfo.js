'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

(function (factory) {
    if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && _typeof(module.exports) === 'object') {
        var v = factory(require, exports);if (v !== undefined) module.exports = v;
    } else if (typeof define === 'function' && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    /**
     * Provides information about a running Cucumber scenario.
     */

    var ScenarioInfo =
    /**
     * Initializes the [[ScenarioInfo]] object.
     *
     * @param scenarioTitle The string title of the currently running Cucumber scenario.
     * @param tags An array of [[TagName]] representing the tags that are in scope for the currently
     * running Cucumber scenario.
     */
    function ScenarioInfo(scenarioTitle, tags) {
        _classCallCheck(this, ScenarioInfo);

        this.scenarioTitle = scenarioTitle;
        this.tags = tags;
    };

    exports.ScenarioInfo = ScenarioInfo;
});
//# sourceMappingURL=ScenarioInfo.js.map